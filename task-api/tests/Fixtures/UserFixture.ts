import { Client } from 'pg';

export async function tearDown() {
	process.env.PGUSER = 'pguser';
	process.env.PGHOST = 'localhost';
	process.env.PGPASSWORD = 'pgpass';
	process.env.PGDATABASE = 'trustflight';
	process.env.PGPORT = '5432';
	const conn = new Client();
	await conn.connect();
	try {
		await conn.query('drop table public.user');
	} catch (e) {
		// silently fail. not a big deal if we can't drop a table
		// during teardown.
	}
	await conn.end();
}

export async function clearUsers() {
	process.env.PGUSER = 'pguser';
	process.env.PGHOST = 'localhost';
	process.env.PGPASSWORD = 'pgpass';
	process.env.PGDATABASE = 'trustflight';
	process.env.PGPORT = '5432';
	const conn = new Client();
	await conn.connect();
	await conn.query('truncate table public.user');
	await conn.end();
}

export async function setUp() {
	process.env.PGUSER = 'pguser';
	process.env.PGHOST = 'localhost';
	process.env.PGPASSWORD = 'pgpass';
	process.env.PGDATABASE = 'trustflight';
	process.env.PGPORT = '5432';
	const conn = new Client();
	await conn.connect();
	await conn.query(
		'CREATE TABLE public.user (id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, last_name varchar(255) NOT NULL, first_name varchar(255) NOT NULL, email varchar(255) NOT NULL, username varchar(255) NOT null, password varchar(255) NOT null)'
	);
	await conn.query({
		text:
			'insert into public.user (first_name, last_name, email, username, password) values ($1, $2, $3, $4, $5)',
		values: ['Bob', 'Smith', 'Bob@smith.comm', 'bsmith', 'password'],
	});
	await conn.query({
		text:
			'insert into public.user (first_name, last_name, email, username, password) values ($1, $2, $3, $4, $5)',
		values: ['Mary', 'Jones', 'mary@jones.comm', 'mjones', 'password'],
	});
	await conn.end();
}
